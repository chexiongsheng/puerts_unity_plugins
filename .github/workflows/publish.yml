name: publish

on: 
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'tag name'     
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Retrieve version
        run: |
          echo "PLUGIN_VERSION=$(cat unity/native_src/Src/Puerts.cpp | grep -Po '(?<=LIB_VERSION\s)(\d+)')" >> $GITHUB_ENV
            
      #- uses: actions/download-artifact@v1
      #  with:
      #    name: Puerts_Unity_Plugins
      #    path: Plugins/
          
      - name: Create Unity.tar.gz and UE4.tar.gz
        run: |
          tar cvfz Unity.tar.gz -C unity/Assets Plugins Puerts
          sed -i 's/UseNewV8\s\+=\s\+true/UseNewV8 = false/g' unreal/Puerts/Source/JsEnv/JsEnv.Build.cs
          tar cvfz UE4.tar.gz -C unreal Puerts
          
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_v8.yml
          path: unreal/Puerts/ThirdParty/
          
      - name: Create UE4_8.4.371.19.tar.gz
        run: |
          rm -rf unreal/Puerts/ThirdParty/Include/v8
          rm -rf unreal/Puerts/ThirdParty/Library/V8
          sed -i 's/UseNewV8\s\+=\s\+false/UseNewV8 = true/g' unreal/Puerts/Source/JsEnv/JsEnv.Build.cs
          tar cvfz UE4_8.4.371.19.tar.gz -C unreal Puerts
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Tag:${{ github.event.inputs.tag_name }},Plugin_Version:${{ env.PLUGIN_VERSION }}
          draft: false
          prerelease: false
          
      - name: Upload Unity.tar.gz
        id: upload-release-asset1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Unity.tar.gz
          asset_name: Unity.tar.gz
          asset_content_type: application/tgz
          
      - name: Upload UE4.tar.gz
        id: upload-release-asset2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./UE4.tar.gz
          asset_name: UE4.tar.gz
          asset_content_type: application/tgz
          
      - name: Upload UE4_8.4.371.19.tar.gz
        id: upload-release-asset3
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./UE4_8.4.371.19.tar.gz
          asset_name: UE4_8.4.371.19.tar.gz
          asset_content_type: application/tgz
   
